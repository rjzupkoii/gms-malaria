/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var dataset = ee.FeatureCollection("users/rzupko/gms_wrs2_swaths"),
    pin = /* color: #d63000 */ee.Geometry.Point([95.30717788409113, 28.53126258967645]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/


// Mask the clouds out of the image
var maskClouds = function(image) {
  var qa = image.select('QA_PIXEL');
  var mask = qa.bitwiseAnd(1 << 3).eq(0);
  return image.updateMask(mask);  
};

// Get the Landsat 8 image for each swath, for 2020
var getImages = function(swath) {
  var image = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filter(ee.Filter.and(
      ee.Filter.eq('WRS_PATH', swath.get('PATH')),
      ee.Filter.eq('WRS_ROW', swath.get('ROW'))))
    .filterDate('2020-01-01', '2020-12-31');
  return image.map(maskClouds).mean();
};

// This route does not work
//var gms_wrs2_swaths = ee.FeatureCollection('users/rzupko/gms_wrs2_swaths');
var images = dataset.map(getImages);
Map.centerObject(images);
Map.addLayer(images, [], 'Not working!');

// This route does work
var items = dataset.map(function(feature) {
  var row = feature.get('ROW');
  return ee.Feature(feature).set('foo', row);
});
var swath = dataset.first();
var image = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
  .filter(ee.Filter.and(
    ee.Filter.eq('WRS_PATH', swath.get('PATH')),
    ee.Filter.eq('WRS_ROW', swath.get('ROW'))))
  .filterDate('2020-01-01', '2020-12-31');
image = image.map(maskClouds).mean();
Map.addLayer(image, [], 'Working!');

var indicies = ee.List(
  [
    ee.List([134,41]), 
    ee.List([134,42]),
    ee.List([134,43]),
  ]);
image = ee.ImageCollection(indicies.map(function(item) {
    item = ee.List(item);
    var image = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filter(ee.Filter.and(
      ee.Filter.eq('WRS_PATH', item.get(0)),
      ee.Filter.eq('WRS_ROW', item.get(1))))
    .filterDate('2020-01-01', '2020-12-31');
  return ee.Image(image.map(maskClouds).mean());
}));
Map.centerObject(pin);
Map.addLayer(image, [], 'Via ee.List! With ee.ImageCollectioon');